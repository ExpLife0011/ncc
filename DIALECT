The compiler originally implemented K&R C, but it now implements
most of ANSI C89. The type system, anyway, is complete. Highlights:

  - enumerations

  - qualifiers (const, volatile)

  - signed types (mostly a useless keyword, but 'signed char' must
   be treated as distinct from 'char' although they are both signed)

  - long double (same as 'double', but also technically distinct)

  - void and void pointers, etc.

All expression evaluation has been updated to deal with the new
types, e.g., const is enforced, floats (vs double) arithmetic is
allowed, etc.

The compiler has always honored separate member namespaces and
allowed bitfields of any integral type (any width, signed or unsigned).

Two (big) features are still missing but are in progress:

  - function prototypes and new-style function definitions
  - struct assignment (including struct arguments and return types)

I believe once these two things are implemented the compiler will
be 100% ANSI C89 compliant.

CAVEAT: many of the changes have not been heavily tested. Once the
features are completed, a test suite will be the next step.

Charles Youse <charles@gnuless.org>
January 10, 2019

